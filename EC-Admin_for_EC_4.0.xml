<?xml version="1.0" encoding="UTF-8"?>
<exportedData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="commander.xsd" version="54" buildLabel="build_4.0_50702_OPT_2012.05.16_13:51:27" buildVersion="4.0.2.50702" passkey="2468db457282d61c50085d36a5b66d570f7f6617">
  <exportPath>/projects/EC-Admin</exportPath>
  <project>
    <projectName>EC-Admin</projectName>
    <description>A set of tools to help with the administration of a Commander Server as released on GitHub on 7/29/2013&#10;Tailored for EC 4.0</description>
    <workspaceName></workspaceName>
    <propertySheet>
      <property>
        <propertyName>performances</propertyName>
        <description>A property sheet for performance diagnostic</description>
        <propertySheet>
          <property>
            <propertyName>CORE</propertyName>
            <description>Tests for number of cores</description>
            <propertySheet>
              <property>
                <propertyName>BAD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt; 4</value>
              </property>
              <property>
                <propertyName>BEST</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&gt; 6</value>
              </property>
              <property>
                <propertyName>GOOD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt;=6</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>CPU</propertyName>
            <description>Tests for CPU speed</description>
            <propertySheet>
              <property>
                <propertyName>BAD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt; 1.5</value>
              </property>
              <property>
                <propertyName>BEST</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&gt; 2</value>
              </property>
              <property>
                <propertyName>GOOD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt;= 2.0</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>DBPERF</propertyName>
            <description>Test for Database Performance</description>
            <propertySheet>
              <property>
                <propertyName>BAD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&gt; .10</value>
              </property>
              <property>
                <propertyName>BEST</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt;.07</value>
              </property>
              <property>
                <propertyName>GOOD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&gt;= .07</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>DISKREAD</propertyName>
            <description>Tests for Disk Reading Performance</description>
            <propertySheet>
              <property>
                <propertyName>BAD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt; 2</value>
              </property>
              <property>
                <propertyName>BEST</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&gt;5</value>
              </property>
              <property>
                <propertyName>GOOD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt;=5</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>DISKWRITE</propertyName>
            <description>Tests for Disk Writing Performance</description>
            <propertySheet>
              <property>
                <propertyName>BAD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt; 2</value>
              </property>
              <property>
                <propertyName>BEST</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&gt;5</value>
              </property>
              <property>
                <propertyName>GOOD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt;=5</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>PERF</propertyName>
            <description>Test for ping times to resources</description>
            <propertySheet>
              <property>
                <propertyName>BAD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&gt; 10</value>
              </property>
              <property>
                <propertyName>BEST</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt; 5</value>
              </property>
              <property>
                <propertyName>GOOD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&gt;=5</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>PING</propertyName>
            <description>Test for ping times to resources</description>
            <propertySheet>
              <property>
                <propertyName>BAD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&gt; 2</value>
              </property>
              <property>
                <propertyName>BEST</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&lt; 1</value>
              </property>
              <property>
                <propertyName>GOOD</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>&gt;=1</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>RAM</propertyName>
            <description>Test for RAM amount</description>
            <propertySheet>
              <property>
                <propertyName>BAD</propertyName>
                <description>Value below 4 GB is bad</description>
                <expandable>1</expandable>
                <value>&lt; 4</value>
              </property>
              <property>
                <propertyName>BEST</propertyName>
                <description>Anything over 8GB is perfect</description>
                <expandable>1</expandable>
                <value>&gt; 8</value>
              </property>
              <property>
                <propertyName>GOOD</propertyName>
                <description>RAM between 4GB and 8GB is acceptable</description>
                <expandable>1</expandable>
                <value>&lt;= 8</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>scripts</propertyName>
            <description>perl Library</description>
            <propertySheet>
              <property>
                <propertyName>perf.pm</propertyName>
                <description>checkvalue(PERF, value): test the value against BAD, GOOD and BEST logic tests for PERF test (in /myProject/performances/PERF)&#10;&#10;</description>
                <expandable>1</expandable>
                <value>$[/myProject/scripts/perlHeader]&#10;$[/myProject/scripts/perlLib]&#10;&#10;sub checkValue&#10;{&#10;  my $test=shift;            # the test to perform&#10;  my $value=shift;         # the value to test&#10;  my $summary=shift;   # the summary to display on the job page&#10;&#10;  printf("Value to test: %s\n", $value) if ($DEBUG);&#10;  printf("Checking Performance for %s: ", $test);&#10; &#10;  InvokeCommander("SuppressLog", "setProperty", "summary", $summary);&#10;  if (eval $value .  getP("/myProject/performances/$test/BAD")) {&#10;    printf("BAD\n");&#10;    InvokeCommander("SuppressLog", "setProperty", "outcome", "warning");&#10;    return -1;&#10;  } elsif (eval $value . getP("/myProject/performances/$test/GOOD")) {&#10;    printf("GOOD\n");&#10;    return 0;&#10;  } elsif(eval $value . getP("/myProject/performances/$test/BEST")) {&#10;    printf("BEST\n");&#10;    return +1;&#10;  } else {&#10;    printf ("\nTest for %s does not resolve. Verify your values in the performances property sheet\n", $test);&#10;    exit (2);&#10;  }&#10;}</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
      </property>
      <property>
        <propertyName>scripts</propertyName>
        <description>A list of Perl helpers</description>
        <propertySheet>
          <property>
            <propertyName>perlCommonLib</propertyName>
            <description>Perl Library (format agnostic) for:&#10;&#10; - getP: a simple getPropertycall. Return undef in case of error&#10; - humanSize: return a size in human readable string</description>
            <expandable>1</expandable>
            <value>#############################################################################&#10;#&#10;# Return property value or undef in case of error (non existing)&#10;#&#10;#############################################################################&#10;sub getP&#10;{&#10;  my $prop=shift;&#10;&#10;  my($success, $xPath, $errMsg, $errCode)= InvokeCommander("SuppressLog IgnoreError", "getProperty", $prop);&#10;  return undef if ($success != 1);&#10;  my $val= $xPath-&gt;findvalue("//value");&#10;  return($val);&#10;}&#10;&#10;#############################################################################&#10;#&#10;# Return human readable size&#10;#&#10;#############################################################################&#10;sub humanSize {&#10;  my $size = shift();&#10;&#10;  if ($size &gt; 1099511627776) { # TB: 1024 GB&#10;      return sprintf("%.2f TB", $size / 1099511627776);&#10;  }&#10;  if ($size &gt; 1073741824) { # GB: 1024 MB&#10;      return sprintf("%.2f GB", $size / 1073741824);&#10;  }&#10;  if ($size &gt; 1048576) { # MB: 1024 KB&#10;      return sprintf("%.2f MB", $size / 1048576);&#10;  }&#10;  elsif ($size &gt; 1024) { # KiB: 1024 B&#10;      return sprintf("%.2f KB", $size / 1024);&#10;  }&#10;                                  # bytes&#10;  return "$size byte" . ($size &lt;= 1 ? "" : "s");&#10;}</value>
          </property>
          <property>
            <propertyName>perlHeader</propertyName>
            <description>default Perl Header to use the API</description>
            <expandable>1</expandable>
            <value>#############################################################################&#10;#&#10;# Copyright 2013 Electric-Cloud Inc.&#10;#&#10;#############################################################################&#10;use strict;&#10;use English;&#10;use ElectricCommander;&#10;$| = 1;&#10;&#10;my $DEBUG=0;&#10;&#10;# Create a single instance of the Perl access to ElectricCommander&#10;my $ec = new ElectricCommander();&#10;&#10;# Check for the OS Type&#10;my $osIsWindows = $^O =~ /MSWin/;&#10;</value>
          </property>
          <property>
            <propertyName>perlHeaderJSON</propertyName>
            <description>default Perl Header to use the API with JSON format</description>
            <expandable>1</expandable>
            <value>#############################################################################&#10;#&#10;# Copyright 2013 Electric-Cloud Inc.&#10;#&#10;#############################################################################&#10;use strict;&#10;use English;&#10;use ElectricCommander;&#10;use Data::Dumper;&#10;$| = 1;&#10;&#10;my $DEBUG=0;&#10;&#10;# Create a single instance of the Perl access to ElectricCommander&#10;my $ec = new ElectricCommander({'format' =&gt; "json"});&#10;&#10;# Check for the OS Type&#10;my $osIsWindows = $^O =~ /MSWin/;</value>
          </property>
          <property>
            <propertyName>perlLib</propertyName>
            <description>Perl Libraries for:&#10; - InvokeCommander: Run an ElectricCommander function using the Perl API&#10; - getPS: return a Hash for porperties contained in a PropertySheet&#10;#-------------------------------------------------------------------------&#10;# Run an ElectricCommander function using the Perl API&#10;#&#10;# Params&#10;# optionFlags - "AllowLog" or "SuppressLog" or "SuppressResult"&#10;# combined with "IgnoreError"&#10;# commanderFunction&#10;# Variable Parameters&#10;# The parameters required by the ElectricCommander function&#10;# according to the Perl API. See the ElectricCommander&#10;# Help system for more information.&#10;# (the functions and paramenter are based on "ectool" - run it for documentation)&#10;#&#10;# Returns&#10;# success - 1 if no error was detected&#10;# xPath - an XML::XPath object with the result.&#10;# errMsg - a message string extracted from Commander on error&#10;# errCode - the code part &lt;code&gt; of the XML&#10;#-------------------------------------------------------------------------</description>
            <expandable>1</expandable>
            <value>$[/projects/EC-Admin/scripts/perlCommonLib]&#10;&#10;#############################################################################&#10;#&#10;# Invoke a API call&#10;#&#10;#############################################################################&#10;sub InvokeCommander {&#10;&#10;    my $optionFlags = shift;&#10;    my $commanderFunction = shift;&#10;    my $xPath;&#10;    my $success = 1;&#10;&#10;    my $bSuppressLog = $optionFlags =~ /SuppressLog/i;&#10;    my $bSuppressResult = $bSuppressLog || $optionFlags =~ /SuppressResult/i;&#10;    my $bIgnoreError = $optionFlags =~ /IgnoreError/i;&#10;&#10;    # Run the command&#10;    # print "Request to Commander: $commanderFunction\n" unless ($bSuppressLog);&#10;&#10;    $ec-&gt;abortOnError(0) if $bIgnoreError;&#10;    $xPath = $ec-&gt;$commanderFunction(@_);&#10;    $ec-&gt;abortOnError(1) if $bIgnoreError;&#10;&#10;    # Check for error return&#10;    my $errMsg = $ec-&gt;checkAllErrors($xPath);&#10;    my $errCode=$xPath-&gt;findvalue('//code',)-&gt;value();&#10;    if ($errMsg ne "") {&#10;        $success = 0;&#10;    }&#10;    if ($xPath) {&#10;        print "Return data from Commander:\n" .&#10;               $xPath-&gt;findnodes_as_string("/") . "\n"&#10;            unless $bSuppressResult;&#10;    }&#10;&#10;    # Return the result&#10;    return ($success, $xPath, $errMsg, $errCode);&#10;}&#10;&#10;&#10;#############################################################################&#10;#&#10;# Return a hash of the properties contained in a Property Sheet.&#10;# Args:&#10;#    1. Property Sheet path&#10;#    2. Recursive boolean&#10;#############################################################################&#10;sub getPS&#10;{&#10;  my $psPath=shift;&#10;  my $recursive=shift;&#10;  &#10;  my $hashRef=undef;&#10;  &#10;  my($success, $result, $errMsg, $errCode)=InvokeCommander("SuppressLog IgnoreError", "getProperties", {'path'=&gt;$psPath});&#10;  return $hashRef if (!$success);&#10;  &#10; my $nodeset=$result-&gt;find('//property');&#10;  foreach my $node ($nodeset-&gt;get_nodelist) {&#10;	my $propName=$result-&gt;findvalue('propertyName',    $node);&#10;    my $value   =$result-&gt;findvalue('value',           $node);&#10;    my $psId    =$result-&gt;findvalue('propertySheetId', $node);&#10;    &#10;    # this is not a nested PS    &#10;    if ($psId eq '') {&#10;      $hashRef-&gt;{$propName}=$value;&#10;    } else {&#10;      # nested PropertySheet&#10;      if ($recursive) {&#10;        $hashRef-&gt;{$propName}=getPS("$psPath/$propName");&#10;      } else {&#10;        $hashRef-&gt;{$propName}=undef;&#10;      }  &#10;    }&#10;  }&#10;  return $hashRef;&#10;}</value>
          </property>
          <property>
            <propertyName>perlLibJSON</propertyName>
            <description>Perl Libraries (JSON Format) for:&#10; - InvokeCommander: Run an ElectricCommander function using the Perl API&#10; - getPS: return a Hash for porperties contained in a PropertySheet&#10;&#10;#-------------------------------------------------------------------------&#10;# Run an ElectricCommander function using the Perl API&#10;#&#10;# Params&#10;# optionFlags - "AllowLog" or "SuppressLog" or "SuppressResult"&#10;# combined with "IgnoreError"&#10;# commanderFunction&#10;# Variable Parameters&#10;# The parameters required by the ElectricCommander function&#10;# according to the Perl API. See the ElectricCommander&#10;# Help system for more information.&#10;# (the functions and paramenter are based on "ectool" - run it for documentation)&#10;#&#10;# Returns&#10;# success - 1 if no error was detected&#10;# xPath - an XML::XPath object with the result.&#10;# errMsg - a message string extracted from Commander on error&#10;# errCode - the code part &lt;code&gt; of the XML&#10;#-------------------------------------------------------------------------</description>
            <expandable>1</expandable>
            <value>$[/projects/EC-Admin/scripts/perlCommonLib]&#10;&#10;#############################################################################&#10;#&#10;# Invoke a API call&#10;#&#10;#############################################################################&#10;sub InvokeCommander {&#10;&#10;    my $optionFlags = shift;&#10;    my $commanderFunction = shift;&#10;    my $result;&#10;    my $success = 1;&#10;	my $errMsg;&#10;	my $errCode;&#10;&#10;    my $bSuppressLog = $optionFlags =~ /SuppressLog/i;&#10;    my $bSuppressResult = $bSuppressLog || $optionFlags =~ /SuppressResult/i;&#10;    my $bIgnoreError = $optionFlags =~ /IgnoreError/i;&#10;&#10;    # Run the command&#10;    # print "Request to Commander: $commanderFunction\n" unless ($bSuppressLog);&#10;&#10;    $ec-&gt;abortOnError(0) if $bIgnoreError;&#10;    $result = $ec-&gt;$commanderFunction(@_);&#10;    $ec-&gt;abortOnError(1) if $bIgnoreError;&#10;&#10;    # Check for error return&#10;    if (defined ($result-&gt;{responses}-&gt;[0]-&gt;{error})) {&#10;    	$errCode=$result-&gt;{responses}-&gt;[0]-&gt;{error}-&gt;{code};&#10;    	$errMsg=$result-&gt;{responses}-&gt;[0]-&gt;{error}-&gt;{message};&#10;    }&#10;&#10;    if ($errMsg ne "") {&#10;        $success = 0;&#10;    }&#10;    if ($result) {&#10;        print "Return data from Commander:\n" .&#10;               Dumper($result) . "\n"&#10;            unless $bSuppressResult;&#10;    }&#10;&#10;    # Return the result&#10;    return ($success, $result, $errMsg, $errCode);&#10;}&#10;&#10;&#10;#############################################################################&#10;#&#10;# Return a hash of the properties contained in a Property Sheet.&#10;# Args:&#10;#    1. Property Sheet path&#10;#    2. Recursive boolean&#10;#############################################################################&#10;sub getPS&#10;{&#10;  my $psPath=shift;&#10;  my $recursive=shift;&#10;  &#10;  my $hashRef=undef;;&#10;  &#10;  my($success, $result, $errMsg, $errCode)=InvokeCommander("SuppressLog IgnoreError", "getProperties", {'path'=&gt;$psPath});&#10;  return $hashRef if (!$success);&#10;  &#10;  foreach my $node ($result-&gt;findnodes('//property')) {&#10;	my $propName=$node-&gt;{'propertyName'};&#10;    my $value=$node-&gt;{'value'};&#10;    if (defined ($value)) {&#10;      $hashRef-&gt;{$propName}=$node-&gt;{'value'};&#10;    } else {&#10;      # nested PropertySheet&#10;      if ($recursive) {&#10;        $hashRef-&gt;{$propName}=getPS("$psPath/$propName");&#10;      } else {&#10;        $hashRef-&gt;{$propName}=undef;&#10;      }  &#10;    }&#10;  }&#10;  return $hashRef;&#10;}</value>
          </property>
        </propertySheet>
      </property>
      <property>
        <propertyName>ec_tags</propertyName>
        <expandable>1</expandable>
        <value>  </value>
      </property>
      <property>
        <propertyName>version</propertyName>
        <description>Version of the EC-Admin project&#10;&#10;History:&#10;- version 1.3.3&#10;    + Added getPS() function in perlLib (JSON and XML format)&#10;    + Added ec_parameterForm to artifactsCleanup to give it the same look and feel than jobCleanup&#10;    + Took advantage of createJobStep to simplify  artifactsCleanup&#10;&#10;- version 1.3.2&#10;    + Added "available disk space" information in performanceMetrics procedure&#10;    + Fixed bug with getP()&#10;    + Added Perl header and library for JSON format&#10;    + Added new parameters for saveProjects (relocatable, ACLs and notifiers)&#10;&#10;- version 1.3.1:&#10;    + Added "available memory" information in performanceMetrics procedure&#10;&#10;- version 1.3:&#10;    + New procedure to delete jobs by results&#10;    + New parameter to cleanupJobs to skip jobs matching a pattern&#10;&#10;- version 1.2:  &#10;    + New  performance diagnostic procedure&#10;    + provide a getP Perl function for easy getProperty&#10;    + New procedure to delete workspace orphan job directories&#10;&#10;- version 1.1: &#10;      semaphore management&#10;      saveProjects&#10;&#10;- version 1.0: &#10;      initial version including job and artifact management</description>
        <expandable>1</expandable>
        <value>1.3.3</value>
      </property>
    </propertySheet>
    <credential>
      <credentialName>adminLogin</credentialName>
      <description></description>
      <password>/DHePBz5RUcyoG7IRp4eyQ==</password>
      <userName>admin</userName>
      <propertySheet>
      </propertySheet>
    </credential>
    <procedure>
      <procedureName>acquireSemaphore</procedureName>
      <description></description>
      <jobNameTemplate></jobNameTemplate>
      <resourceName></resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>maxSemaphoreValue</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>semaphoreProperty</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>serializationResource</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>maxSemaphoreValue</formalParameterName>
        <defaultValue></defaultValue>
        <description>The maximum sempahore value to gate some procedures.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>semaphoreProperty</formalParameterName>
        <defaultValue></defaultValue>
        <description>The path to the property used as a semaphore</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>serializationResource</formalParameterName>
        <defaultValue></defaultValue>
        <description>This should point to a resouce with a step limit of 1</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>acquireSemaphore</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>use strict;&#10;use ElectricCommander;&#10;$| = 1;&#10;&#10;my $ec = new ElectricCommander;&#10;my $xPath = $ec-&gt;getProperty("$[semaphoreProperty]");&#10;my $semaphore = $xPath-&gt;findvalue('//value')-&gt;string_value;&#10;print "First eval: semaphore = $semaphore\n";&#10;&#10;while ($semaphore &gt;= $[maxSemaphoreValue]){&#10;  sleep(5);&#10;  $xPath = $ec-&gt;getProperty("$[semaphoreProperty]");&#10;  $semaphore = $xPath-&gt;findvalue('//value')-&gt;string_value;&#10;  print "in loop: semaphore = $semaphore\n";&#10;}&#10;&#10;# When we get here, a token is available. Acquire it.&#10;my $xPath = $ec-&gt;incrementProperty("$[semaphoreProperty]");&#10;</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName>$[serializationResource]</resourceName>
        <shell>ec-perl</shell>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>deleteWorkspaceOrphans</procedureName>
      <description>Procedure to crawl a workspace directory to find orphan jobs (directories without a matching job)</description>
      <jobNameTemplate>EC-Admin-deleteWorkspaceOrphans-$[jobId]</jobNameTemplate>
      <resourceName></resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>executeDeletion</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Report</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>false</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Delete</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>true</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>2</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>olderThab</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>1 month</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>30</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>3 months</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>91</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option3</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>6 months</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>182</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option4</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>1 year</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>365</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>4</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>olderThan</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>1 month</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>30</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>3 months</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>91</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option3</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>6 months</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>182</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option4</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>1 year</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>365</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>4</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>resource</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>verboseMode</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>workspace</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>executeDeletion</formalParameterName>
        <defaultValue>false</defaultValue>
        <description>If this parameter is not true, no real data will be deleted.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>olderThan</formalParameterName>
        <defaultValue>91</defaultValue>
        <description>Indicate the number of days after which orphans job directories should be deleted</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>resource</formalParameterName>
        <defaultValue>local</defaultValue>
        <description>Choose a resource that have full access to the workspace</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>verboseMode</formalParameterName>
        <defaultValue>true</defaultValue>
        <description>Display information about directories that are skipped</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>checkbox</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>workspace</formalParameterName>
        <defaultValue>default</defaultValue>
        <description>Name of the workspace t crawl for orphans</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>crawlWorkspace</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>#############################################################################&#10;#&#10;#  crawlWorkspace-- Script to find orphan job directories in a workspace&#10;#  Copyright 2013 Electric-Cloud Inc.&#10;#&#10;#############################################################################&#10;&#10;use File::Path;&#10;use File::stat;&#10;use Fcntl ':mode';&#10;use DateTime;&#10;use Time::localtime;&#10;&#10;$[/myProject/scripts/perlHeader]&#10;$[/myProject/scripts/perlLib]&#10;&#10;&#10;#############################################################################&#10;#&#10;#  Assign Commander parameters to variables&#10;#&#10;#############################################################################&#10;my $workspace       = "$[/myParent/workspace]";&#10;my $executeDeletion = "$[/myParent/executeDeletion]";&#10;my $nbDays          =  $[/myParent/olderThan];&#10;my $verboseMode     = "$[/myParent/verboseMode]";&#10;#############################################################################&#10;#&#10;#  Global Variables&#10;#&#10;#############################################################################&#10;my $osIsWindows = $^O =~ /MSWin/;&#10;my $totalWksSize=0;          # Size of workspace files&#10;my $totalNbJobs=0;           # Number of orphans job directories&#10;my $wksDir;&#10;my $timeLimit = time() - $nbDays*24*3600;&#10;&#10;#############################################################################&#10;#&#10;#  Main&#10;#&#10;#############################################################################&#10;&#10;printf ("%s'%s' workspace for orphan job directories older than %d days (%s)!\n",&#10;        $executeDeletion eq "true"?"Deleting":"Crawling", $workspace, $nbDays,&#10;         ctime($timeLimit));&#10;&#10;# Check the workspace&#10;my ($success, $xPath, $errorMsg) = InvokeCommander("SuppressLog", "getWorkspace", $workspace);&#10;if (! $success) {&#10;  printf("Cannot access workspace %s!\n%s\n", $workspace, $errorMsg);&#10;  exit 1;&#10;}&#10;&#10;if ($osIsWindows) {&#10;  $wksDir=$xPath-&gt;findvalue('//agentUncPath');&#10;  $wksDir=~ s#/#\\#g;&#10;} else {&#10;  $wksDir=$xPath-&gt;findvalue('//agentUnixPath');&#10;}&#10;printf ("Workspace directory: %s\n\n", $wksDir);&#10;opendir(D, $wksDir) || die "Cannot access workspace directory $wksDir!\n";&#10;foreach my $dir (grep(!/^\.\.?/, readdir(D))) {&#10;  my $fullPath=$wksDir . "/" . $dir;&#10;  my $fStat=stat($fullPath);&#10;  if (! (S_ISDIR($fStat-&gt;mode))) {              # skip non directories&#10;    printf ("%s: not a directory. Skipping!\n", $dir) if ($verboseMode eq "true");&#10;    next;&#10;  }&#10;  if ($dir !~ /[-_\(]\d{3,}/ ) {&#10;    printf("%s: does not match a job name pattern. Skipping!\n", $dir);&#10;    next;&#10;  }&#10;  my $fileTime = $fStat-&gt;mtime;         #Modification time&#10;&#10;  if ( $fileTime &gt; $timeLimit) {    # Check only older directories&#10;    printf("%s: too recent (%s). Skipping!\n", $dir, ctime($fileTime)) if ($verboseMode eq "true");&#10;    next;&#10;  }&#10;  ($success, $xPath, $errorMsg)=InvokeCommander("SuppressLog", "findObjects", "job", &#10;                                     {filter =&gt; [{"propertyName" =&gt; "directoryName", "operator" =&gt; "like",&#10;                                                  "operand1" =&gt; $dir}]&#10;                                     });&#10;  if (scalar($xPath-&gt;find('//object')-&gt;get_nodelist) == 0) {&#10;    printf("%s: Orphan\n", $dir);&#10;    my $wksSize = getDirSize("$fullPath");&#10;    printf ("  Size: %s\n", humanSize($wksSize));&#10;    $totalWksSize += $wksSize;&#10;    $totalNbJobs++;&#10;    if ($executeDeletion eq "true") {&#10;       printf("  Deleting\n");&#10;       rmtree ([$fullPath]);                &#10;    }       &#10;  }                           &#10;} # foreach $dir&#10;&#10;printf("SUMMARY\n");&#10;printf("Total number of jobs:  %d\n", $totalNbJobs);&#10;printf("Total File size:       %s\n", humanSize($totalWksSize));&#10;&#10;exit 0;&#10;&#10;&#10;#############################################################################&#10;#&#10;#  Calculate the size of a directory&#10;#&#10;#############################################################################&#10;sub getDirSize {&#10;  my $dir  = shift;&#10;  my $size = 0;&#10;&#10;  opendir(D,"$dir") || return 0;&#10;  foreach my $dirContent (grep(!/^\.\.?/,readdir(D))) {&#10;     my $st=stat("$dir/$dirContent");&#10;     if (S_ISREG($st-&gt;mode)) {&#10;       $size += $st-&gt;size;&#10;     } elsif (S_ISDIR($st-&gt;mode)) {&#10;       $size += getDirSize("$dir/$dirContent");&#10;     }&#10;}&#10;  closedir(D);&#10;  return $size;&#10;}&#10;&#10;&#10;#############################################################################&#10;#&#10;#  Return human readable size&#10;#&#10;#############################################################################&#10;sub humanSize {&#10;  my $size = shift();&#10;&#10;  if ($size &gt; 1099511627776) {    #   TB: 1024 GB&#10;      return sprintf("%.2f TB", $size / 1099511627776);&#10;  }&#10;  if ($size &gt; 1073741824) {       #   GB: 1024 MB&#10;      return sprintf("%.2f GB", $size / 1073741824);&#10;  }&#10;  if ($size &gt; 1048576) {          #   MB: 1024 KB&#10;      return sprintf("%.2f MB", $size / 1048576);&#10;  }&#10;  elsif ($size &gt; 1024) {          #   KiB: 1024 B&#10;      return sprintf("%.2f KB", $size / 1024);&#10;  }&#10;                                  #   bytes&#10;  return "$size byte" . ($size &lt;= 1 ? "" : "s");&#10;}&#10;</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName>$[resource]</resourceName>
        <shell>ec-perl</shell>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>jobCleanup_byResult</procedureName>
      <description>Delete jobs and the associated workspace based on  result: keeping X goods/warning, and Y failed&#10;Report the number of jobs, the disk space and database space that could/was be deleted.</description>
      <jobNameTemplate></jobNameTemplate>
      <resourceName>local</resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>delete Aborted Jobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>delete Error Jobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>delete Successful Jobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>0</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>deleteAbortedJobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>executeDeletion</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Report</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>false</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Delete</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>true</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>2</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>0</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>jobLevel</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Aborted</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>Aborted</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Error &amp; Aborted</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>Error</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option3</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>All</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>All</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>3</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>jobProperty</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>nbFailedJobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>nbGoodJobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>nbWarning</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>nbWarningJobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>olderThan</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>1 month</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>30</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>2 months</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>60</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option3</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>3 months</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>91</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option4</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>6 months</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>182</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option5</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>1 year</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>365</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>5</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>skipPlugins</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
        <property>
          <propertyName>ec_parameterForm</propertyName>
          <description>Redefine UI</description>
          <expandable>1</expandable>
          <value>&lt;editor&gt; &#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Success Jobs&lt;/label&gt;	&#10;        &lt;property&gt;nbGoodJobs&lt;/property&gt;	&#10;        &lt;documentation&gt;The number of successful jobs to preserve per procedure&lt;/documentation&gt; &#10;        &lt;type&gt;entry&lt;/type&gt;	&#10;        &lt;value&gt;5&lt;/value&gt; &#10;        &lt;required&gt;1&lt;/required&gt;&#10;    &lt;/formElement&gt; &#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Warning Jobs&lt;/label&gt; &#10;        &lt;property&gt;nbWarningJobs&lt;/property&gt; &#10;        &lt;documentation&gt;The number of Warning jobs to preserve per procedure&lt;/documentation&gt; &#10;        &lt;type&gt;entry&lt;/type&gt;  &#10;        &lt;value&gt;1&lt;/value&gt; &#10;        &lt;required&gt;1&lt;/required&gt;&#10;    &lt;/formElement&gt; &#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Failed Jobs&lt;/label&gt; &#10;        &lt;property&gt;nbFailedJobs&lt;/property&gt; &#10;        &lt;documentation&gt;The number of failed jobs to preserve per procedure&lt;/documentation&gt; &#10;        &lt;type&gt;entry&lt;/type&gt;  &#10;        &lt;value&gt;5&lt;/value&gt; &#10;        &lt;required&gt;1&lt;/required&gt;&#10;    &lt;/formElement&gt; &#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Job property&lt;/label&gt; &#10;        &lt;property&gt;jobProperty&lt;/property&gt; &#10;        &lt;documentation&gt;Name of a property attached to your jobs. If this property is set, your job won't be deleted.&#10;        &lt;/documentation&gt; &#10;        &lt;type&gt;entry&lt;/type&gt;  &#10;        &lt;value&gt;doNotDelete&lt;/value&gt; &#10;        &lt;required&gt;1&lt;/required&gt;&#10;    &lt;/formElement&gt; &#10;&#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Delete&lt;/label&gt;	&#10;        &lt;property&gt;executeDeletion&lt;/property&gt; &#10;        &lt;documentation&gt;If this option is not set, only report is done. No real data are deleted&lt;/documentation&gt; &#10;        &lt;type&gt;select&lt;/type&gt;	&#10;        &lt;option&gt; &#10;            &lt;name&gt;Report&lt;/name&gt; &#10;            &lt;value&gt;false&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;option&gt; &#10;            &lt;name&gt;Delete&lt;/name&gt; &#10;            &lt;value&gt;true&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;value&gt;false&lt;/value&gt;	&#10;    &lt;/formElement&gt; &#10;&#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Skip plugins&lt;/label&gt;	&#10;        &lt;property&gt;skipPlugins&lt;/property&gt; &#10;        &lt;documentation&gt;A boolean to indicate to skip plugin projects or not&lt;/documentation&gt; &#10;        &lt;type&gt;checkbox&lt;/type&gt;	&#10;        &lt;checkedValue&gt;true&lt;/checkedValue&gt; &#10;        &lt;uncheckedValue&gt;false&lt;/uncheckedValue&gt; &#10;        &lt;initiallyChecked&gt;1&lt;/initiallyChecked&gt; &#10;        &lt;value&gt;true&lt;/value&gt;	&#10;    &lt;/formElement&gt;&#10;&lt;/editor&gt; </value>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>executeDeletion</formalParameterName>
        <defaultValue>false</defaultValue>
        <description>If this option is not set, only report is done. No real data are deleted</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>jobProperty</formalParameterName>
        <defaultValue>doNotDelete</defaultValue>
        <description>Name of a property attached to your jobs. If this property is set, your job won't be deleted.&#10;</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>nbFailedJobs</formalParameterName>
        <defaultValue>3</defaultValue>
        <description>number of failed jobs to preserve</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>nbGoodJobs</formalParameterName>
        <defaultValue>5</defaultValue>
        <description>Number of good jobs to keep. Warning is considered good.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>nbWarningJobs</formalParameterName>
        <defaultValue>0</defaultValue>
        <description>Number of Warning jobs to keep</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>skipPlugins</formalParameterName>
        <defaultValue>true</defaultValue>
        <description>A boolean to indicate to skip plugin projects or not</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>checkbox</type>
      </formalParameter>
      <step>
        <stepName>deleteJobs</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>#############################################################################&#10;#&#10;#  deleteJobs_byResult -- Script to delete jobs and workspaces keeping&#10;#                         some good and failed ones.&#10;#  Copyright 2013 Electric-Cloud Inc.&#10;#&#10;#############################################################################&#10;&#10;#&#10;# Perl Commander Header&#10;$[/myProject/scripts/perlHeader]&#10;use File::Path;&#10;use File::stat;&#10;use Fcntl ':mode';&#10;use DateTime;&#10;&#10;#&#10;# Perl Commander library&#10;$[/myProject/scripts/perlLib]&#10;&#10;#############################################################################&#10;#&#10;#  Assign Commander parameters to variables&#10;#&#10;#############################################################################&#10;my $jobProperty     = "$[jobProperty]";&#10;my $executeDeletion = "$[executeDeletion]";&#10;my $nbGood          =  $[nbGoodJobs];&#10;my $nbFail          =  $[nbFailedJobs];&#10;my $nbWarn          =  $[nbWarningJobs];&#10;my $skipPluginBool  = "$[skipPlugins]";&#10;&#10;#############################################################################&#10;#&#10;#  Global Variables&#10;#&#10;#############################################################################&#10;my $version="1.0";&#10;my $totalWksSize=0;          # Size of workspace files&#10;my $totalNbJobs=0;           # Number of jobs to delete potentially&#10;my $totalNbSteps=0;          # Number of steps to evaluate DB size&#10;my $DBStepSize=10240;        # Step is about 10K in DB&#10;&#10;$DEBUG=0;&#10;&#10;#############################################################################&#10;#&#10;#  Main&#10;#&#10;#############################################################################&#10;printf("%s jobs based on results.\n", &#10;    $executeDeletion eq "true"?"Deleting":"Reporting");&#10;printf("  Preserving %d GOOD    jobs\n", $nbGood);&#10;printf("  Preserving %d WARNING jobs\n", $nbWarn);&#10;printf("  Preserving %d FAIL    jobs\n\n", $nbFail);&#10;&#10;&#10;#&#10;# Loop over each project &#10;#&#10;my ($success, $pjPath) = InvokeCommander("SuppressLog", "getProjects");&#10;my $projSet = $pjPath-&gt;find('//project');&#10;foreach my $pjNode ($projSet-&gt;get_nodelist) {&#10;  my $projName  =$pjPath-&gt;findvalue('projectName', $pjNode);&#10;  my $pluginName=$pjPath-&gt;findvalue('pluginName',  $pjNode);&#10;&#10;  # skip plugins if Boolean is set&#10;  next if (($pluginName ne "") &amp;&amp; ($skipPluginBool eq "true"));&#10;&#10;  printf("Project: %s\n", $projName);&#10;&#10;  #&#10;  # Loop over each procedure&#10;  #&#10;  my ($success, $procPath) = InvokeCommander("SuppressLog", "getProcedures", $projName);&#10;  my $procSet = $procPath-&gt;find('//procedure');&#10;  foreach my $procNode ($procSet-&gt;get_nodelist) {&#10;    my $procName  =$procPath-&gt;findvalue('procedureName', $procNode);&#10;    printf("  Procedure: %s\n", $procName);&#10;&#10;    # create filterList&#10;    my @filterList;&#10;    push (@filterList, {"propertyName" =&gt; "status",&#10;                        "operator" =&gt; "equals",&#10;                        "operand1" =&gt; "completed"});&#10;    push (@filterList, {"propertyName" =&gt; "projectName",&#10;                        "operator" =&gt; "equals",&#10;                        "operand1" =&gt; $projName});&#10;    push (@filterList, {"propertyName" =&gt; "procedureName",&#10;                        "operator" =&gt; "equals",&#10;                        "operand1" =&gt; $procName});&#10;    push (@filterList, {"propertyName" =&gt; $jobProperty,&#10;                        "operator" =&gt; "isNull"});&#10;&#10;    my ($success, $xPath) = InvokeCommander("SuppressLog", "findObjects", "job",&#10;                                            {maxIds =&gt; 5000,&#10;                                             filter =&gt; \@filterList ,&#10;                                             sort =&gt; [ {propertyName =&gt; "jobId",&#10;                                                        order =&gt; "descending"} ]});&#10;&#10;    # Check for the OS Type&#10;    my $osIsWindows = $^O =~ /MSWin/;&#10;&#10;    # Loop over all returned jobs&#10;    my $nodeset = $xPath-&gt;find('//job');&#10;    my $procGood=0;&#10;    my $procFailed=0;&#10;    my $procWarning=0;&#10;    foreach my $node ($nodeset-&gt;get_nodelist) {&#10;      my $wksSize;&#10;&#10;      my $jobId     = $xPath-&gt;findvalue('jobId',   $node);&#10;      my $jobName   = $xPath-&gt;findvalue('jobName', $node);&#10;      my $jobOutcome= $xPath-&gt;findvalue('outcome', $node);&#10;      print "    Job: $jobName\n";&#10;&#10;      # Skiping over X GOOD and Y BAD&#10;      if (($procGood &lt; $nbGood) &amp;&amp; ($jobOutcome eq "success")) {&#10;        printf ("      Preserving job (GOOD)\n");&#10;        $procGood++;&#10;        next;&#10;      }&#10;      if (($procWarning &lt; $nbWarn) &amp;&amp; ($jobOutcome eq "warning")) {&#10;        printf ("      Preserving job (WARNING)\n");&#10;        $procWarning++;&#10;        next;&#10;      }&#10;      if (($procFailed &lt; $nbFail) &amp;&amp; ($jobOutcome eq "error")) {&#10;        printf ("      Preserving job (ERROR)\n");&#10;        $procFailed++;&#10;        next;&#10;      }&#10;&#10;      $totalNbJobs++;&#10;&#10;      #&#10;      # Find number of steps for the jobs&#10;      my ($success, $xPath) = InvokeCommander("SuppressLog", "findJobSteps", &#10;                    {'jobId' =&gt; $jobId});&#10;      my $nbSteps=scalar($xPath-&gt;findnodes('//object')-&gt;get_nodelist);&#10;      $totalNbSteps += $nbSteps;&#10;      printf("      Job steps:\t%d\n", $nbSteps) if ($DEBUG);&#10;&#10;      #  Find the workspaces (there may be more than one if some steps&#10;      #  were configured to use a different workspace)&#10;      my ($success, $xPath) = InvokeCommander("SuppressLog", "getJobInfo",&#10;                                               $jobId);&#10;      my $wsNodeset = $xPath-&gt;find('//job/workspace');&#10;      foreach my $wsNode ($wsNodeset-&gt;get_nodelist) {&#10;        my $workspace;&#10;        if ($osIsWindows) {&#10;            $workspace = $xPath-&gt;findvalue('./winUNC', $wsNode);&#10;            $workspace =~ s'/'\\'g;&#10;        } else {&#10;            $workspace = $xPath-&gt;findvalue('./unix', $wsNode);&#10;        }&#10;&#10;        print "      Workspace:\t$workspace\n" if (($workspace ne "") &amp;&amp;  ($DEBUG));&#10;&#10;        $wksSize = getDirSize($workspace);&#10;        printf ("        Size:\t%s\n", humanSize($wksSize)) if ($DEBUG);&#10;        $totalWksSize += $wksSize;&#10;        if ($executeDeletion eq "true") {&#10;           rmtree ([$workspace])  ;&#10;           print "        Deleting Workspace\n" if ($DEBUG);&#10;        }&#10;      }&#10;&#10;      # Delete the job&#10;&#10;      if ($executeDeletion eq "true") {&#10;          InvokeCommander("SuppressLog", "deleteJob", $jobId) ;&#10;          print "      Deleting Job\n\n";&#10;      } &#10;    } #job loop&#10;  } #procedure loop&#10;} #project loop&#10;&#10;printf("\nSUMMARY:\n");&#10;printf("Total number of jobs:  %d\n", $totalNbJobs);&#10;printf("Total File size:       %s\n", humanSize($totalWksSize));&#10;printf("Total number of steps: %d\n", $totalNbSteps);&#10;printf("Total Database size:   %s\n", humanSize($totalNbSteps * $DBStepSize));&#10;&#10;$ec-&gt;setProperty("/myJob/numberOfJobs", $totalNbJobs);&#10;$ec-&gt;setProperty("/myJob/diskSpace", $totalWksSize);&#10;$ec-&gt;setProperty("/myJob/numbernumberOfSteps", $totalNbSteps);&#10;&#10;$ec-&gt;setProperty("summary", $totalNbJobs . " jobs deleted" ) if ($executeDeletion eq "true");&#10;&#10;exit(0);&#10;&#10;&#10;#############################################################################&#10;#&#10;#  Calculate the size of the workspace directory&#10;#&#10;#############################################################################&#10;sub getDirSize {&#10;  my $dir  = shift;&#10;  my $size = 0;&#10;&#10;  opendir(D,"$dir") || return 0;&#10;  foreach my $dirContent (grep(!/^\.\.?/,readdir(D))) {&#10;     my $st=stat("$dir/$dirContent");&#10;     if (S_ISREG($st-&gt;mode)) {&#10;       $size += $st-&gt;size;&#10;     } elsif (S_ISDIR($st-&gt;mode)) {&#10;       $size += getDirSize("$dir/$dirContent");&#10;     }&#10;  }&#10;  closedir(D);&#10;  return $size;&#10;}&#10;&#10;&#10;#############################################################################&#10;#&#10;#  Return human readable size&#10;#&#10;#############################################################################&#10;sub humanSize {&#10;  my $size = shift();&#10;&#10;  if ($size &gt; 1099511627776) {    #   TB: 1024 GB&#10;      return sprintf("%.2f TB", $size / 1099511627776);&#10;  }&#10;  if ($size &gt; 1073741824) {       #   GB: 1024 MB&#10;      return sprintf("%.2f GB", $size / 1073741824);&#10;  }&#10;  if ($size &gt; 1048576) {          #   MB: 1024 KB&#10;      return sprintf("%.2f MB", $size / 1048576);&#10;  }&#10;  elsif ($size &gt; 1024) {          #   KiB: 1024 B&#10;      return sprintf("%.2f KB", $size / 1024);&#10;  }&#10;                                  #   bytes&#10;  return "$size byte" . ($size &lt;= 1 ? "" : "s");&#10;}&#10;</command>
        <condition></condition>
        <description>Script to delete jobs and workspaces</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>jobsCleanup</procedureName>
      <description> Delete jobs older than a number of days, along with the associated workspace.&#10;Report the number of jobs, the disk space and database space that could/was be deleted.</description>
      <jobNameTemplate></jobNameTemplate>
      <resourceName>local</resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>delete Aborted Jobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>delete Error Jobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>delete Successful Jobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>0</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>deleteAbortedJobs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>executeDeletion</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Report</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>false</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Delete</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>true</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>2</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>0</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>jobLevel</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Aborted</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>Aborted</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Error &amp; Aborted</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>Error</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option3</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>All</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>All</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>3</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>jobPatternMatching</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>jobProperty</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>olderThan</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>1 month</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>30</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>2 months</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>60</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option3</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>3 months</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>91</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option4</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>6 months</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>182</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option5</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>1 year</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>365</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>5</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
        <property>
          <propertyName>ec_parameterForm</propertyName>
          <description>Redefine UI</description>
          <expandable>1</expandable>
          <value>&lt;editor&gt; &#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Delete jobs older than&lt;/label&gt;    &#10;        &lt;property&gt;olderThan&lt;/property&gt;    &#10;        &lt;documentation&gt;Indicate the numbers of days after which jobs should be deleted&lt;/documentation&gt; &#10;        &lt;type&gt;select&lt;/type&gt; &#10;        &lt;option&gt; &#10;            &lt;name&gt;1 month&lt;/name&gt; &#10;            &lt;value&gt;30&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;option&gt; &#10;            &lt;name&gt;2 months&lt;/name&gt; &#10;            &lt;value&gt;60&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;option&gt; &#10;            &lt;name&gt;3 months&lt;/name&gt; &#10;            &lt;value&gt;91&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;option&gt; &#10;            &lt;name&gt;6 months&lt;/name&gt; &#10;            &lt;value&gt;182&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;option&gt; &#10;            &lt;name&gt;1 year&lt;/name&gt; &#10;            &lt;value&gt;365&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;value&gt;91&lt;/value&gt;  &#10;        &lt;required&gt;1&lt;/required&gt;&#10;    &lt;/formElement&gt; &#10;&#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Type of jobs to delete&lt;/label&gt;    &#10;        &lt;property&gt;jobLevel&lt;/property&gt;    &#10;        &lt;documentation&gt;define what jobs you want to delete: Aborted, Error, All&lt;/documentation&gt; &#10;        &lt;type&gt;select&lt;/type&gt; &#10;        &lt;option&gt; &#10;            &lt;name&gt;Aborted&lt;/name&gt; &#10;            &lt;value&gt;Aborted&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;option&gt; &#10;            &lt;name&gt;Error and Aborted&lt;/name&gt; &#10;            &lt;value&gt;Error&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;option&gt; &#10;            &lt;name&gt;All&lt;/name&gt; &#10;            &lt;value&gt;All&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;value&gt;Aborted&lt;/value&gt;  &#10;        &lt;required&gt;1&lt;/required&gt;&#10;    &lt;/formElement&gt; &#10;&#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Job property&lt;/label&gt; &#10;        &lt;property&gt;jobProperty&lt;/property&gt; &#10;        &lt;documentation&gt;Name of a property attached to your jobs. If this property is set, your job won't be deleted.&#10;        &lt;/documentation&gt; &#10;        &lt;type&gt;entry&lt;/type&gt; &#10;        &lt;value&gt;doNotDelete&lt;/value&gt; &#10;        &lt;required&gt;1&lt;/required&gt;&#10;    &lt;/formElement&gt; &#10;&#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Pattern matching&lt;/label&gt; &#10;        &lt;property&gt;jobPatternMatching&lt;/property&gt; &#10;        &lt;documentation&gt;a SQL pattern matching to automatically preserve some jobs. The pattern must solve for a LIKE statement.&lt;/documentation&gt; &#10;        &lt;type&gt;entry&lt;/type&gt;&#10;    &lt;/formElement&gt; &#10;&#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Delete&lt;/label&gt;    &#10;        &lt;property&gt;executeDeletion&lt;/property&gt; &#10;        &lt;documentation&gt;If this option is not set, only report is done. No real data are deleted&lt;/documentation&gt; &#10;        &lt;type&gt;select&lt;/type&gt;    &#10;        &lt;option&gt; &#10;            &lt;name&gt;Report&lt;/name&gt; &#10;            &lt;value&gt;false&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;option&gt; &#10;            &lt;name&gt;Delete&lt;/name&gt; &#10;            &lt;value&gt;true&lt;/value&gt; &#10;        &lt;/option&gt; &#10;        &lt;value&gt;false&lt;/value&gt;    &#10;    &lt;/formElement&gt; &#10;&#10;&lt;/editor&gt;</value>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>executeDeletion</formalParameterName>
        <defaultValue>false</defaultValue>
        <description>If this option is not set, only report is done. No real data are deleted</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>jobLevel</formalParameterName>
        <defaultValue>Aborted</defaultValue>
        <description>define what jobs you want to delete: Aborted, Error, All</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>jobPatternMatching</formalParameterName>
        <defaultValue></defaultValue>
        <description>a SQL pattern matching to automatically preserve some jobs. The pattern must solve for a LIKE statement.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>jobProperty</formalParameterName>
        <defaultValue>doNotDelete</defaultValue>
        <description>Name of a property attached to your jobs. If this property is set, your job won't be deleted no matter how old it is.&#10;</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>olderThan</formalParameterName>
        <defaultValue>91</defaultValue>
        <description>Indicate the numbers of days after which jobs should be deleted</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <step>
        <stepName>deleteJobs</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>#############################################################################&#10;#&#10;#  deleteJobs -- Script to delete jobs and workspaces&#10;#  Copyright 2013 Electric-Cloud Inc.&#10;#&#10;#############################################################################&#10;&#10;#&#10;# Perl Commander Header&#10;$[/myProject/scripts/perlHeader]&#10;use File::Path;&#10;use File::stat;&#10;use Fcntl ':mode';&#10;use DateTime;&#10;&#10;#&#10;# Perl Commander library&#10;$[/myProject/scripts/perlLib]&#10;&#10;#############################################################################&#10;#&#10;#  Assign Commander parameters to variables&#10;#&#10;#############################################################################&#10;my $jobProperty     = "$[jobProperty]";&#10;my $timeLimit       =  $[olderThan];&#10;my $executeDeletion = "$[executeDeletion]";&#10;my $jobLevel        = "$[jobLevel]";&#10;my $jobPattern      = "$[jobPatternMatching]"; &#10;&#10;#############################################################################&#10;#&#10;#  Global Variables&#10;#&#10;#############################################################################&#10;my $version="1.0";&#10;my $totalWksSize=0;          # Size of workspace files&#10;my $totalNbJobs=0;           # Number of jobs to delete potentially&#10;my $totalNbSteps=0;          # Number of steps to evaluate DB size&#10;my $DBStepSize=10240;        # Step is about 10K in DB&#10;&#10;#############################################################################&#10;#&#10;#  Main&#10;#&#10;#############################################################################&#10;&#10;printf("%s jobs older than $timeLimit days (%s).\n", &#10;    $executeDeletion eq "true"?"Deleting":"Reporting", &#10;    calculateDate($timeLimit));&#10;printf("  Skipping over \"%s\" jobs.\n\n", $jobPattern) if ($jobPattern ne "");&#10;&#10;# create filterList&#10;my @filterList;&#10;# only finished jobs&#10;push (@filterList, {"propertyName" =&gt; "status",&#10;                    "operator" =&gt; "equals",&#10;                    "operand1" =&gt; "completed"});&#10;# older than&#10;push (@filterList, {"propertyName" =&gt; "finish",&#10;                    "operator" =&gt; "lessThan",&#10;                    "operand1" =&gt; calculateDate($timeLimit)});&#10;# do not have specific job property&#10;push (@filterList, {"propertyName" =&gt; $jobProperty,&#10;                    "operator" =&gt; "isNull"});&#10;# job pattern does not match&#10;if ($jobPattern ne "") {&#10;  push (@filterList, {"propertyName" =&gt; "jobName",&#10;                      "operator" =&gt; "notLike",&#10;                      "operand1" =&gt; $jobPattern});&#10;}              &#10;# check for jobLevel&#10;if ($jobLevel eq "Aborted") {&#10;  push (@filterList, {"propertyName" =&gt; "abortStatus",&#10;                      "operator" =&gt; "equals",&#10;                      "operand1" =&gt; "FORCE_ABORT"});&#10;} elsif ($jobLevel eq "Error") {&#10;  push (@filterList, {"propertyName" =&gt; "outcome",&#10;                       "operator" =&gt; "equals",&#10;                       "operand1" =&gt; "error"});&#10;}&#10;my ($success, $xPath) = InvokeCommander("SuppressLog", "findObjects", "job",&#10;                                        {maxIds =&gt; 5000,&#10;                                         filter =&gt; \@filterList ,&#10;                                         sort =&gt; [ {propertyName =&gt; "finish",&#10;                                                    order =&gt; "ascending"} ]});&#10;&#10;print "Search Status:\t$success\n";&#10;&#10;# Check for the OS Type&#10;my $osIsWindows = $^O =~ /MSWin/;&#10;&#10;# Loop over all returned jobs&#10;my $nodeset = $xPath-&gt;find('//job');&#10;foreach my $node ($nodeset-&gt;get_nodelist) {&#10;        $totalNbJobs++;&#10;        my $wksSize;&#10;&#10;        my $jobId = $xPath-&gt;findvalue('jobId', $node);&#10;        my $jobName = $xPath-&gt;findvalue('jobName', $node);&#10;&#10;        print "Job: $jobName\n";&#10;&#10;        #&#10;        # Find abort status and outcome&#10;        if ($xPath-&gt;findvalue('abortStatus', $node) eq "FORCE_ABORT") {&#10;          printf("  Outcome:\tAborted\n");&#10;        } else {&#10;          printf("  Outcome:\t%s\n", $xPath-&gt;findvalue('outcome', $node));&#10;        }&#10;        #&#10;        # Find number of steps for the jobs&#10;        my ($success, $xPath) = InvokeCommander("SuppressLog", "findJobSteps", &#10;                      {'jobId' =&gt; $jobId});&#10;        my $nbSteps=scalar($xPath-&gt;findnodes('//object')-&gt;get_nodelist);&#10;        $totalNbSteps += $nbSteps;&#10;        printf("  Job steps:\t%d\n", $nbSteps);&#10;&#10;        #  Find the workspaces (there may be more than one if some steps&#10;        #  were configured to use a different workspace)&#10;        my ($success, $xPath) = InvokeCommander("SuppressLog", "getJobInfo",&#10;                                                 $jobId);&#10;        my $wsNodeset = $xPath-&gt;find('//job/workspace');&#10;        foreach my $wsNode ($wsNodeset-&gt;get_nodelist) {&#10;            my $workspace;&#10;            if ($osIsWindows) {&#10;                $workspace = $xPath-&gt;findvalue('./winUNC', $wsNode);&#10;                $workspace =~ s'/'\\'g;&#10;            } else {&#10;                $workspace = $xPath-&gt;findvalue('./unix', $wsNode);&#10;            }&#10;&#10;            print "  Workspace:\t$workspace\n" if ($workspace ne "");&#10;&#10;            $wksSize = getDirSize($workspace);&#10;            printf ("    Size:\t%s\n", humanSize($wksSize));&#10;            $totalWksSize += $wksSize;&#10;            if ($executeDeletion eq "true") {&#10;               rmtree ([$workspace])  ;&#10;               print "    Deleting Workspace\n";&#10;            }&#10;        }&#10;&#10;        # Delete the job&#10;&#10;        if ($executeDeletion eq "true") {&#10;            InvokeCommander("SuppressLog", "deleteJob", $jobId) ;&#10;            print "  Deleting Job\n\n";&#10;        } &#10;}&#10;&#10;printf("\nSUMMARY:\n");&#10;printf("Total number of jobs:  %d\n", $totalNbJobs);&#10;printf("Total File size:       %s\n", humanSize($totalWksSize));&#10;printf("Total number of steps: %d\n", $totalNbSteps);&#10;printf("Total Database size:   %s\n", humanSize($totalNbSteps * $DBStepSize));&#10;&#10;$ec-&gt;setProperty("/myJob/numberOfJobs", $totalNbJobs);&#10;$ec-&gt;setProperty("/myJob/diskSpace", $totalWksSize);&#10;$ec-&gt;setProperty("/myJob/numbernumberOfSteps", $totalNbSteps);&#10;&#10;$ec-&gt;setProperty("summary", $totalNbJobs . " jobs deleted" ) if ($executeDeletion eq "true");&#10;&#10;exit(0);&#10;&#10;&#10;#############################################################################&#10;#&#10;#  Calculate the Date based on now and the number of days required by&#10;#  the user before deleting jobs&#10;#&#10;#############################################################################&#10;sub calculateDate {&#10;    my $nbDays=shift;&#10;    return DateTime-&gt;now()-&gt;subtract(days =&gt; $nbDays)-&gt;iso8601() . ".000Z";&#10;}&#10;&#10;&#10;#############################################################################&#10;#&#10;#  Calculate the size of the workspace directory&#10;#&#10;#############################################################################&#10;sub getDirSize {&#10;  my $dir  = shift;&#10;  my $size = 0;&#10;&#10;  opendir(D,"$dir") || return 0;&#10;  foreach my $dirContent (grep(!/^\.\.?/,readdir(D))) {&#10;     my $st=stat("$dir/$dirContent");&#10;     if (S_ISREG($st-&gt;mode)) {&#10;       $size += $st-&gt;size;&#10;     } elsif (S_ISDIR($st-&gt;mode)) {&#10;       $size += getDirSize("$dir/$dirContent");&#10;     }&#10;  }&#10;  closedir(D);&#10;  return $size;&#10;}&#10;</command>
        <condition></condition>
        <description>Script to delete jobs and workspaces</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>releaseSemaphore</procedureName>
      <description>decrement the semaphore value</description>
      <jobNameTemplate></jobNameTemplate>
      <resourceName></resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>maxSemaphoreValue</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>semaphoreProperty</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>serializationResource</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>semaphoreProperty</formalParameterName>
        <defaultValue></defaultValue>
        <description>The path to the property used as a semaphore</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>serializationResource</formalParameterName>
        <defaultValue></defaultValue>
        <description>This should point to a resouce with a step limit of 1</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>decrementSemaphore</stepName>
        <alwaysRun>1</alwaysRun>
        <broadcast>0</broadcast>
        <command>$[/myProject/scripts/perlHeader]&#10;&#10;my $xPath = $ec-&gt;incrementProperty("$[semaphoreProperty]", -1);&#10;my $semaphore = $xPath-&gt;findvalue('//value')-&gt;string_value;&#10;$ec-&gt;setProperty("summary", "semaphore = $semaphore");</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>saveProjects</procedureName>
      <description>a framework to export projects.</description>
      <jobNameTemplate>EC-Admin-saveProjects-$[jobId]</jobNameTemplate>
      <resourceName>local</resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>includeACLs</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>0</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>includeNotifiers</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>0</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>pathname</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>relocatable</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>true</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>false</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
        <property>
          <propertyName>ec_parameterForm</propertyName>
          <description>To overwrite default parameter panel display</description>
          <expandable>1</expandable>
          <value>&lt;editor&gt; &#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Bakcup directory&lt;/label&gt;	&#10;        &lt;property&gt;pathname&lt;/property&gt;	&#10;        &lt;documentation&gt;Directory where to saved the XML files.&lt;/documentation&gt; &#10;        &lt;type&gt;entry&lt;/type&gt;	&#10;        &lt;value&gt;/tmp&lt;/value&gt; &#10;	    &lt;required&gt;1&lt;/required&gt; &#10;    &lt;/formElement&gt; &#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Relocatable&lt;/label&gt;	&#10;        &lt;property&gt;relocatable&lt;/property&gt; &#10;        &lt;documentation&gt;If set to "true", the export will not include object IDs, ACLs, system property sheets, create/modify times, owners, &#10;email notifiers or lastModifiedBy information, and the export file result will be much smaller than a normal export.&lt;/documentation&gt; &#10;        &lt;type&gt;checkbox&lt;/type&gt;	&#10;        &lt;checkedValue&gt;true&lt;/checkedValue&gt; &#10;        &lt;uncheckedValue&gt;false&lt;/uncheckedValue&gt; &#10;        &lt;initiallyChecked&gt;1&lt;/initiallyChecked&gt; &#10;        &lt;value&gt;true&lt;/value&gt;	&#10;    &lt;/formElement&gt; &#10;    &lt;formElement&gt; &#10;        &lt;label&gt;ACLs&lt;/label&gt;	&#10;        &lt;property&gt;includeACLs&lt;/property&gt; &#10;        &lt;documentation&gt;If set to "true", the export will include ACLs.&lt;/documentation&gt; &#10;        &lt;type&gt;checkbox&lt;/type&gt;	&#10;        &lt;checkedValue&gt;true&lt;/checkedValue&gt; &#10;        &lt;uncheckedValue&gt;false&lt;/uncheckedValue&gt; &#10;        &lt;initiallyChecked&gt;0&lt;/initiallyChecked&gt; &#10;        &lt;value&gt;false&lt;/value&gt;	&#10;    &lt;/formElement&gt; &#10;    &lt;formElement&gt; &#10;        &lt;label&gt;Notifiers&lt;/label&gt;	&#10;        &lt;property&gt;includeNotifiers&lt;/property&gt; &#10;        &lt;documentation&gt;If set to "true", the export will include email notifiers.&lt;/documentation&gt; &#10;        &lt;type&gt;checkbox&lt;/type&gt;	&#10;        &lt;checkedValue&gt;true&lt;/checkedValue&gt; &#10;        &lt;uncheckedValue&gt;false&lt;/uncheckedValue&gt; &#10;        &lt;initiallyChecked&gt;0&lt;/initiallyChecked&gt; &#10;        &lt;value&gt;false&lt;/value&gt;	&#10;    &lt;/formElement&gt; &#10;&lt;/editor&gt; </value>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>includeACLs</formalParameterName>
        <defaultValue>false</defaultValue>
        <description> if set to "true", the export will include ACLs.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>checkbox</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>includeNotifiers</formalParameterName>
        <defaultValue>false</defaultValue>
        <description> If  set to "true", the export will include email notifiers.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>checkbox</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>pathname</formalParameterName>
        <defaultValue>/tmp</defaultValue>
        <description>Directory where to saved the XML files</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>relocatable</formalParameterName>
        <defaultValue>true</defaultValue>
        <description>If set to "true", the export will not include object IDs, ACLs, system property sheets, create/modify times, owners, email notifiers or lastModifiedBy information, and the export file result will be much smaller than a normal export.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>checkbox</type>
      </formalParameter>
      <step>
        <stepName>save Projects</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>#############################################################################&#10;#&#10;#  Copyright 2013 Electric-Cloud Inc.&#10;#&#10;#############################################################################&#10;use File::Path;&#10;&#10;$[/myProject/scripts/perlHeader]&#10;$[/myProject/scripts/perlLib]&#10;#&#10;# Parameters&#10;#&#10;my $path="$[pathname]";&#10;my $includeACLs="$[includeACLs]";&#10;my $includeNotifiers="$[includeNotifiers]";&#10;my $relocatable="$[relocatable]";&#10;&#10;my $errorCount=0;&#10;# Get list of Project&#10;my ($success, $xPath) = InvokeCommander("SuppressLog", "getProjects");&#10;&#10;# Create the directory&#10;mkpath($path);&#10;&#10;my $nodeset = $xPath-&gt;find('//project');&#10;foreach my $node ($nodeset-&gt;get_nodelist) {&#10;  my $pName=$xPath-&gt;findvalue('projectName', $node);&#10;  my $pluginName=$xPath-&gt;findvalue('pluginName', $node);&#10;&#10;  # skip plugins  &#10;  next if ($pluginName ne "");&#10;  printf("Saving Project: %s\n", $pName);&#10;  my ($success, $xPath,, $errMsg, $errCode) = InvokeCommander("SuppressLog", "export", $path."/$pName".".xml",&#10;  					{ 'path'=&gt; "/projects/".$pName, &#10;                                          'relocatable' =&gt; $relocatable,&#10;                                          'withAcls'    =&gt; $includeACLs,&#10;                                          'withNotifiers'=&gt;$includeNotifiers});&#10;  if (! $success) {&#10;    printf("  Error exporting %s", $pName);&#10;    printf("  %s: %s\n", $errCode, $errMsg);&#10;    $errorCount++;&#10;  }&#10;}&#10;exit($errorCount);&#10;</command>
        <condition></condition>
        <description>A procedure to export each project individually into a XML file for backup&#10;&#10;Changelog:&#10;2013-07-28 Laurent Rochette&#10;  Add parameters to include or not ACLs and email notifiers</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <schedule>
      <scheduleName>CleanJobs</scheduleName>
      <beginDate></beginDate>
      <description>A Schedule to automatically delete jobs older than 90 days</description>
      <endDate></endDate>
      <interval>0</interval>
      <intervalUnits>seconds</intervalUnits>
      <misfirePolicy>runOnce</misfirePolicy>
      <monthDays></monthDays>
      <priority>normal</priority>
      <procedureName>Job Cleanup</procedureName>
      <scheduleDisabled>1</scheduleDisabled>
      <startTime>2:00</startTime>
      <stopTime></stopTime>
      <timeZone>America/Los_Angeles</timeZone>
      <weekDays></weekDays>
      <actualParameters>
        <property>
          <propertyName>executeDeletion</propertyName>
          <expandable>1</expandable>
          <value>true</value>
        </property>
        <property>
          <propertyName>jobProperty</propertyName>
          <expandable>1</expandable>
          <value>doNotDeleteThisJob</value>
        </property>
        <property>
          <propertyName>olderThan</propertyName>
          <expandable>1</expandable>
          <value>90</value>
        </property>
      </actualParameters>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>formType</propertyName>
              <expandable>1</expandable>
              <value>standard</value>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
    </schedule>
    <schedule>
      <scheduleName>weeklySaveProjects</scheduleName>
      <beginDate></beginDate>
      <description></description>
      <endDate></endDate>
      <interval>0</interval>
      <intervalUnits>seconds</intervalUnits>
      <misfirePolicy>runOnce</misfirePolicy>
      <monthDays></monthDays>
      <priority>normal</priority>
      <procedureName>saveProjects</procedureName>
      <scheduleDisabled>1</scheduleDisabled>
      <startTime>4:30</startTime>
      <stopTime></stopTime>
      <timeZone>America/Los_Angeles</timeZone>
      <weekDays>Tuesday Thursday Saturday </weekDays>
      <actualParameters>
        <property>
          <propertyName>pathname</propertyName>
          <expandable>1</expandable>
          <value>/scratch/BACKUP</value>
        </property>
      </actualParameters>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>formType</propertyName>
              <expandable>1</expandable>
              <value>standard</value>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
    </schedule>
  </project>
</exportedData>
