<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta content="text/html; charset=us-ascii" http-equiv="content-type" />
	<title>EC-Admin Plugin</title>
	<style>
/* pluginhelp.css -
 *
 * This file defines styles used for displaying plugin documentation.
 *
 * Copyright (c) 2006-2014 Electric Cloud, Inc.
 * All rights reserved
 */

.help {
    font-family: Times New Roman, Times, serif;
    font-size: 16px;
    margin: 10px 10px 0px 30px;
}

.help h1 {
    font-family: Verdana, Helvetica, sans-serif;
    font-size: 25.89px;
    font-weight: bold;
    color: #4670B8;
    margin-left: -10px;
}

.help h2 {
    font-family: Verdana, Helvetica, sans-serif;
    font-size: 125%;
    font-weight: bold;
    color: #5981BD;
    margin-left: -10px;
}

.help h3 {
    font-family: Verdana, Helvetica, sans-serif;
    font-size: 115%;
    font-weight: bold;
    color: #5981BD;
}

.help h4 {
    font-family: Verdana, Helvetica, sans-serif;
    font-size: 100%;
    font-weight: bold;
    font-style: italic;
    color: #5981BD;
}

.help a {
    color: #333333;
    text-decoration: none;
    padding: 1px;
    background-image: url(../lib/images/dottedBorder1.gif);
    background-position: bottom;
    background-repeat: repeat-x;
}

.help a:hover {
    color: #CC6600;
    background-image: url(../lib/images/dottedBorder1Hover.gif);
}

.help ul li {
    list-style-position: outside;
    padding-bottom: 4px;
    font-size: 110%;
    margin-left: 5pt;
}

.help pre {
    font-size: 100%;
}

.help img {
    margin-top: 15px;
    margin-bottom: 8 px;
    margin-left: 30px;
    border-style: solid;
    border-width: 1px;
}

.grid {
    border-collapse: collapse;
    width: 900px;
    margin: 15px 0px 0px 30px;
}
    
.grid td {
    border-style: solid;
    border-width: 1px;
    padding: 3px 10px 3px 5px;
    font-size: 110%;
   
}

.grid th {
    border-style: solid;
    border-width: 1px;
    padding-right: 10px;
    padding-left: 5px;
    padding-top: 3px;
    padding-bottom: 3px;
    font-size: 110%;
    text-align: left;
    vertical-align: bottom;
}

.help .required {
    font-weight: bold;
    font-style: italic;
}

.help a:link {
    text-decoration:underline;
}

.help div > a {
    display: none;
}
	</style>

</head>

<body>
    <div class="help">
		<h1>EC-Admin</h1>
<p>Plugin Version 1.11.7</p>
    	<hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade" />

        <p>EC-Admin is a collection of administrative procedures to help you
manage your server. Its inception was sparked by requests from customers
during my Professional Services engagements. It has grown over the years to
what it is now.</p>

		<p>It contains the following modules:</p>
		<ul>
			<li><a href="#look">Look and Feel</a></li>
			<li><a href="#jobs">Jobs and Workspaces management</a></li>
			<li><a href="#plugin">Plugins</a></li>
			<li><a href="#artifacts">Artifacts management</a></li>
			<li><a href="#backup">Object export and backup</a></li>
			<li><a href="#semaphore">Semaphore management</a></li>
			<li><a href="#perf">Performance metrics</a></li>
		</ul>

		<h2><a name="installation"></a>Installation</h2>
		
        <p>This collection of procedures can be found on our 
        	<a href="https://github.com/electriccommunity/EC-Admin">GitHub
        		repository</a>. It is available as a plugin delivered 
        	in the form of a .jar file or you can simply get the source code 
        	and recompile it yourself.</p>

		<p>To install the plugin, use the "Install from File/URL" tab in the
			administration/Plugins or use the "installPlugin" API.</p>
 
		<p>To install on 4.0.x or or 4.1.x, import the EC_4.0.xml file. Be 
			aware that some features are not present as the original project 
			makes use of createJobStep() API which was introduced in 4.2.0:<br/>
ectool import /path_to/EC-Admin_for_EC_4.0.xml --disableSchedules 1</p>

		<p>If you get an error with the passKey, use the "--force 1" option</p>

		<h1><a name="look"></a>Look and Feel</h1>
		<h2>changeBannerColor</h2>
		<p>If you work on multiple Commander servers like a development and a 
			production instances, this procedure is for you. It allows you to change 
			the color of the top banner to make it easier to identify your different 
			servers. Simply choose one of the offered solid boring colors. Feel free 
			to <a href="mailto:lrochette@electric-cloud.com">send me</a> new ones if 
			you have a more artistic touch than me. Or better
			push your changes to 
			<a href="https://github.com/electriccommunity/EC-Admin">GitHub</a>.</p>
			<p>You can also select a written cue to add to the default "electriccommander"
				logo to indicate 
				if you server is of type DEV, SDK, TEST or PROD, in black or white to  
				go along different background colors.<br/>
				You can also upload your own logo to replace the default one by simply filling the "logoFile" 
				parameter field.</p>

		<h1><a name="jobs"></a>Jobs and Workspaces management</h1>
		<p>This set of procedures will help you manage your old jobs and the 
			associated workspaces.</p>
			<h2>jobsCleanup:</h2> 
			<p>A procedure to delete jobs older than a specified number of
days. It will also delete associated workspace job directories. You
can also provide a property name, if this property is attached to the
job, it won't be deleted no matter how old. A report only mode
prevents any real deletion.</p>

			<h2>jobCleanup_byResult:</h2> 
            <p>A procedure to delete jobs older than a specified number of days.
It will also delete associated workspace job directories. It will keep the
number of successful, failed and warning jobs you entered. You can also
provide a property name, if this property is attached to the job, it won't be
deleted no matter how old. A report only mode prevents any real deletion.</p>

			<h2>deleteWorksapceOrphans:</h2> 

            <p>A procedure to crawl a workspace directory to find orphan jobs
(directories without a matching job) on a specified resource.</p>

			<h2>deleteObjects:</h2> 
            <p>A procedure to quickly delete jobs or workflows older than a
specified number of days. It will <b>not</b> delete associated workspace job
directories. This is for customers with huge job or workflow database.</p>


		<h1><a name="plugin"></a>Plugins</h1>
		<h2>Plugin Synchronization</h2>
		<p>This procedure synchronizes plugins between the server and 
		a resource. Plugins are uploaded first as artifacts if it has not been 
		done already and then downloaded on the resource if it does not 
		already exist in the plugins directory.</p>
		
		<h2>Plugin creation</h2>
		<h3>createPluginFromProject</h3>
		<p><b>Note:</b> This procedure requires access to the jar or zip 
			executable in the PATH.</p>
		<p>The procedure "createPluginFromProject" allows transforming a 
			project into a plugin. The parameters are the following:</p>
			<dl>
				<dt><b>Author:</b></dt>
				<dd>The author of the project to transform into a plugin</dd>
				<dt><b>Email:</b></dt>
				<dd>The email of the author</dd>
				<dt><b>Category</b>:</dt>
				<dd>The category of the plugin. It helps filter the plugin in
				the Plugins page and in the pickerList.</dd>
				<dt><b>Description</b>:</dt>
				<dd>The description of the plugin do display in the main 
					plugin page. If left empty it will default to the 
					description of the project.</dd>
				<dt><b>installPlugin</b>:</dt>
				<dd>A Boolean to install or not the plugin after creation</dd>
				<dt><b>promotePlugin</b>:</dt>
				<dd>A Boolean to promote or not the plugin after installation</dd>
				<dt><b>Plugin</b>:</dt>
				<dd>The name of the plugin. If left empty, it will default to
				the project name.</dd>
				<dt><b>Project</b>:</dt>
				<dd>The name of the project to transform into a plugin</dd>
				<dt><b>Version</b>:</dt>
				<dd>Version of the plugin to create.</dd>
			</dl>
		<p>At the project level, you can define the following properties to 
			alter the behavior of the plugin creation:</p>
			<dl>
				<dt><b>ec_visibility:</b></dt>
				<dd>Choose <b>all</b> to have the plugin shows in the project 
					list (like EC-Admin), or <b>pickListOnly</b> (default) to 
					have your procedures available only through the plugin 
					procedure picker (when you choose plugin as a step).</dd>
				<dt><b>help:</b></dt>
				<dd>This property allows you to create a Help page associated 
					with your plugin. The page you are currently reading is 
					created this way so feel free to explore the help property
					 in the EC-Admin plugin/project for an example.</dd>
				<dt><b>promoteAction</b></dt>
				<dd>This proeprty would contain some Perl code to take action
					when the plugin change state. Look at the ec_setup property
					in the plugins installed on your system to get a better idea
					of what you can accomplish.<br/>
					For example to set a property hwne the plugin is pomoted 
					you could add the the following code to the promoteAction
					procedure:<br/>
					<pre><code>
if ( $promoteAction eq 'promote' ) {
    $batch->setProperty( "/projects/$pluginName/addedByPromote", "123" );
}
					</code></pre>
				</dd>
			</dl>
		<p>In addition each procedure can modify the behavior with the 
			following 2 properties:</p>
			<dl>
				<dt><b>exposeToPlugin:</b></dt>
				<dd>This property if set to 1 will add the procedure to 
					ec_setup to be shown in the procedure pickerList when 
					choosing a plugin step.</dd>
				<dt><b>descriptionForPlugin:</b></dt>
				<dd>This property will be shown as the description in the 
					pickerList mentioned above. If it's empty or non-existent,
					 the description will be description of the procedure 
					 itself.</dd>
			</dl>

		<h3>projectAsCode</h3>

		<p><b>Note:</b> This procedure requires access to a resource with the 
			Commander SDK installed.</p>

		<p>This procedure is an extension of createPluginFromProject. It also
		creates a plugin but instead of simply exporting the project, it
		"explodes" each step in its own file for finer granularity check in
		in your favorite SCM tool.<br/>
		In addition, there is an option to extract the project from the plugin 
		upon promotion.<br/>
		All the properties associated with createPluginFromProject still apply.</p>

		<p><u>Note:</u> EC-Admin is released on 
		<a href="https://github.com/electriccommunity/EC-Admin">GitHub</a> using 
		this procedure.</p>

		<h1><a name="artifacts"></a>Artifact Management</h1>
		
		<h2>artifactsCleanup</h2> 
		
		<p>A procedure to delete artifact versions older than a specified number
of days. Same as for jobs above, a property allows preventing the deletion. Once the
artifacts have been deleted, artifact repositories and artifact caches are
cleaned as well (deleting stale artifacts).  A report mode prevents any
real deletion.</p>

		<h2>artifactsCleanup_byQuantity</h2>

		<p>As "ArtifactsCleanup"", this procedure deletes artifact versions 
			older than a specified number
of days but keeps only X per Artifact. Again, a property allows preventing the 
deletion. Once the
artifacts have been deleted, artifact repositories and artifact caches are
cleaned as well (deleting stale artifacts).  A report only mode prevents any
real deletion.</p>

		<h1><a name="backup"></a>Object export and backup</h1>

        <p>This set of procedures is to help you export objects from
ElectricCommander for a potential inclusion into your SCM for
versioning.</p>
		
		<h2>saveProjects</h2>

        <p>This procedure simply exports your projects in a directory on the
server. It is recommended to enable the nightly schedule associated
with it to backup your projects on a regular basis.</p>

		<h2>saveAllObjects</h2>

        <p>This procedure brings a finer granularity to a full server export. For 
example to retrieve an object after a wrong action or a bad code change. By 
default it exports projects and each procedure individually. In addition by 
enabling the matching checkboxes, you can also export resources, 
resource pools, workspaces, users and groups.</p>

		<h1><a name="semaphore"></a>Semaphore Management</h1>

		<h2>acquireSemaphore and releaseSemaphore:</h2>
			
		<p>Those 2 procedures are used to create a 
gate for a set of steps. The important part is to use a resource with a step 
limit of one to ensure the atomicity of increasing and decreasing the gate 
value.</p>

		<h1><a name="perf"></a>Performance metrics</h1>
		<p>This procedure returns some information about your 
			ElectricCommander server like number of processors, total RAM, 
			available RAM, 
ping times with agents, relative performance of agents, ... 
In addition it checks the amount of time spent running steps on the server 
local agents as this should be minimized as much as possible.</p>

		<h1>Contact author</h1> 
  		<p>Laurent Rochette (<a href="mailto:lrochette@electric-cloud.com">lrochette@electric-cloud.com</a>) </p>

	<h1>Legal Jumbo</h1>
 
	<p>This module is free for use. Modify it however you see fit to better your 
experience using ElectricCommander. Share your enhancements and fixes.</p>

	<p>This module is not officially supported by Electric Cloud. It has undergone no 
formal testing and you may run into issues that have not been uncovered in the 
limited manual testing done so far.</p>

	<p>Electric Cloud should not be held liable for any repercussions of using this 
software.</p>
	</div>
</body>
</html>