# -*-Perl-*-

# cleanup.ntest -
#
# check the cleanup procedures of EC-Admin plugin
#
# Copyright (c) 2015 Electric Cloud, Inc.
# All rights reserved

use strict;
use warnings;
use ECTest;

initCommander();
$::N=$adminSession;

my $pluginKey = "EC-Admin";
my $xpath = $::N->getPlugin($pluginKey);
my $pluginName = $xpath->findvalue("//pluginName")->value;

#-------------------------------------------------------------------------------
# Test procedure present.
#-------------------------------------------------------------------------------
ntest "cleanup_procedures", {}, sub {
	assertOK($::N->getProcedure($pluginName, "deleteObjects"), "procedure deleteObjects missing");
	assertOK($::N->getProcedure($pluginName, "deleteWorkspaceOrphans"), "procedure deleteWorkspaceOrphans missing");
	assertOK($::N->getProcedure($pluginName, "jobCleanup_byResult"), "procedure jobCleanup_byResult missing");
	assertOK($::N->getProcedure($pluginName, "jobsCleanup"), "procedure jobsCleanup missing");
	assertOK($::N->getProcedure($pluginName, "subJC_deleteWorkspace"), "procedure subJC_deleteWorkspace missing");
	assertOK($::N->getProcedure($pluginName, "workflowCleanup"), "procedure workflowCleanup missing");
};

#-------------------------------------------------------------------------------
# Issue #18: jobsCleanup fails with property error 
#-------------------------------------------------------------------------------
ntest "humanSize", {}, sub {
    my $xpath = $::N->runProcedure("EC-Admin", {
	procedureName=>"subJC_deleteWorkspace",
	actualParameter=>[
	    {actualParameterName=>"computeUsage", value=>0},
	    {actualParameterName=>"executeDeletion", value=>0},
	    {actualParameterName=>"linDir", value=>"/tmp"},
	    {actualParameterName=>"winDir", value=>"C:\\TEMP"},
	    {actualParameterName=>"resName", value=>"local"}
	]});
    assertOK($xpath, "Failed to launch EC-Admin::subJC_deleteWorkspace");
    if ($xpath) {
	#get new Job ID
        my $jobId  = $xpath->findvalue("//jobId");
        waitForJob($jobId);
	my $jobData  = $::N->getJobDetails($jobId);
        my $outcome = $jobData->findvalue("//job/outcome");
	assertEq("success", $outcome, "subJC_deleteWorkspace failed");
    }
};
1;
